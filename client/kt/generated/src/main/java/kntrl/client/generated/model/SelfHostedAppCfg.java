/*
 * Kntrl API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package kntrl.client.generated.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.HashMap;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;
import kntrl.client.generated.model.AuthCfg;
import kntrl.client.generated.model.DbsCfg;
import kntrl.client.generated.model.EntryCfg;
import kntrl.client.generated.model.HttpCfg;
import kntrl.client.generated.model.I18nCfg;
import kntrl.client.generated.model.RateLimiterCfg;
import kntrl.client.generated.model.TokenCfg;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import kntrl.client.generated.infra.JSON;

/**
 * SelfHostedAppCfg
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-08-23T23:42:03.192677+03:00[Europe/Kiev]")
public class SelfHostedAppCfg {
  public static final String SERIALIZED_NAME_HTTP = "http";
  @SerializedName(SERIALIZED_NAME_HTTP)
  private HttpCfg http;

  public static final String SERIALIZED_NAME_LOGINS = "logins";
  @SerializedName(SERIALIZED_NAME_LOGINS)
  private Set<String> logins = new LinkedHashSet<>();

  public static final String SERIALIZED_NAME_AUTHS = "auths";
  @SerializedName(SERIALIZED_NAME_AUTHS)
  private Map<String, AuthCfg> auths = new HashMap<>();

  public static final String SERIALIZED_NAME_ENTRIES = "entries";
  @SerializedName(SERIALIZED_NAME_ENTRIES)
  private Map<String, EntryCfg> entries = new HashMap<>();

  public static final String SERIALIZED_NAME_DB = "db";
  @SerializedName(SERIALIZED_NAME_DB)
  private DbsCfg db;

  public static final String SERIALIZED_NAME_TOKEN = "token";
  @SerializedName(SERIALIZED_NAME_TOKEN)
  private TokenCfg token;

  public static final String SERIALIZED_NAME_RATE_LIMITERS = "rateLimiters";
  @SerializedName(SERIALIZED_NAME_RATE_LIMITERS)
  private Map<String, RateLimiterCfg> rateLimiters = null;

  public static final String SERIALIZED_NAME_SECRET = "secret";
  @SerializedName(SERIALIZED_NAME_SECRET)
  private String secret;

  public static final String SERIALIZED_NAME_HEALTH_CHECK_KEY = "healthCheckKey";
  @SerializedName(SERIALIZED_NAME_HEALTH_CHECK_KEY)
  private String healthCheckKey;

  public static final String SERIALIZED_NAME_I18N = "i18n";
  @SerializedName(SERIALIZED_NAME_I18N)
  private I18nCfg i18n;

  public SelfHostedAppCfg() { 
  }

  public SelfHostedAppCfg http(HttpCfg http) {
    
    this.http = http;
    return this;
  }

   /**
   * Get http
   * @return http
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public HttpCfg getHttp() {
    return http;
  }


  public void setHttp(HttpCfg http) {
    this.http = http;
  }


  public SelfHostedAppCfg logins(Set<String> logins) {
    
    this.logins = logins;
    return this;
  }

  public SelfHostedAppCfg addLoginsItem(String loginsItem) {
    this.logins.add(loginsItem);
    return this;
  }

   /**
   * list of logins
   * @return logins
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "list of logins")

  public Set<String> getLogins() {
    return logins;
  }


  public void setLogins(Set<String> logins) {
    this.logins = logins;
  }


  public SelfHostedAppCfg auths(Map<String, AuthCfg> auths) {
    
    this.auths = auths;
    return this;
  }

  public SelfHostedAppCfg putAuthsItem(String key, AuthCfg authsItem) {
    this.auths.put(key, authsItem);
    return this;
  }

   /**
   * Get auths
   * @return auths
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Map<String, AuthCfg> getAuths() {
    return auths;
  }


  public void setAuths(Map<String, AuthCfg> auths) {
    this.auths = auths;
  }


  public SelfHostedAppCfg entries(Map<String, EntryCfg> entries) {
    
    this.entries = entries;
    return this;
  }

  public SelfHostedAppCfg putEntriesItem(String key, EntryCfg entriesItem) {
    this.entries.put(key, entriesItem);
    return this;
  }

   /**
   * Get entries
   * @return entries
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Map<String, EntryCfg> getEntries() {
    return entries;
  }


  public void setEntries(Map<String, EntryCfg> entries) {
    this.entries = entries;
  }


  public SelfHostedAppCfg db(DbsCfg db) {
    
    this.db = db;
    return this;
  }

   /**
   * Get db
   * @return db
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public DbsCfg getDb() {
    return db;
  }


  public void setDb(DbsCfg db) {
    this.db = db;
  }


  public SelfHostedAppCfg token(TokenCfg token) {
    
    this.token = token;
    return this;
  }

   /**
   * Get token
   * @return token
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public TokenCfg getToken() {
    return token;
  }


  public void setToken(TokenCfg token) {
    this.token = token;
  }


  public SelfHostedAppCfg rateLimiters(Map<String, RateLimiterCfg> rateLimiters) {
    
    this.rateLimiters = rateLimiters;
    return this;
  }

  public SelfHostedAppCfg putRateLimitersItem(String key, RateLimiterCfg rateLimitersItem) {
    if (this.rateLimiters == null) {
      this.rateLimiters = new HashMap<>();
    }
    this.rateLimiters.put(key, rateLimitersItem);
    return this;
  }

   /**
   * Get rateLimiters
   * @return rateLimiters
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Map<String, RateLimiterCfg> getRateLimiters() {
    return rateLimiters;
  }


  public void setRateLimiters(Map<String, RateLimiterCfg> rateLimiters) {
    this.rateLimiters = rateLimiters;
  }


  public SelfHostedAppCfg secret(String secret) {
    
    this.secret = secret;
    return this;
  }

   /**
   * Get secret
   * @return secret
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSecret() {
    return secret;
  }


  public void setSecret(String secret) {
    this.secret = secret;
  }


  public SelfHostedAppCfg healthCheckKey(String healthCheckKey) {
    
    this.healthCheckKey = healthCheckKey;
    return this;
  }

   /**
   * Get healthCheckKey
   * @return healthCheckKey
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getHealthCheckKey() {
    return healthCheckKey;
  }


  public void setHealthCheckKey(String healthCheckKey) {
    this.healthCheckKey = healthCheckKey;
  }


  public SelfHostedAppCfg i18n(I18nCfg i18n) {
    
    this.i18n = i18n;
    return this;
  }

   /**
   * Get i18n
   * @return i18n
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public I18nCfg getI18n() {
    return i18n;
  }


  public void setI18n(I18nCfg i18n) {
    this.i18n = i18n;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SelfHostedAppCfg selfHostedAppCfg = (SelfHostedAppCfg) o;
    return Objects.equals(this.http, selfHostedAppCfg.http) &&
        Objects.equals(this.logins, selfHostedAppCfg.logins) &&
        Objects.equals(this.auths, selfHostedAppCfg.auths) &&
        Objects.equals(this.entries, selfHostedAppCfg.entries) &&
        Objects.equals(this.db, selfHostedAppCfg.db) &&
        Objects.equals(this.token, selfHostedAppCfg.token) &&
        Objects.equals(this.rateLimiters, selfHostedAppCfg.rateLimiters) &&
        Objects.equals(this.secret, selfHostedAppCfg.secret) &&
        Objects.equals(this.healthCheckKey, selfHostedAppCfg.healthCheckKey) &&
        Objects.equals(this.i18n, selfHostedAppCfg.i18n);
  }

  @Override
  public int hashCode() {
    return Objects.hash(http, logins, auths, entries, db, token, rateLimiters, secret, healthCheckKey, i18n);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SelfHostedAppCfg {\n");
    sb.append("    http: ").append(toIndentedString(http)).append("\n");
    sb.append("    logins: ").append(toIndentedString(logins)).append("\n");
    sb.append("    auths: ").append(toIndentedString(auths)).append("\n");
    sb.append("    entries: ").append(toIndentedString(entries)).append("\n");
    sb.append("    db: ").append(toIndentedString(db)).append("\n");
    sb.append("    token: ").append(toIndentedString(token)).append("\n");
    sb.append("    rateLimiters: ").append(toIndentedString(rateLimiters)).append("\n");
    sb.append("    secret: ").append(toIndentedString(secret)).append("\n");
    sb.append("    healthCheckKey: ").append(toIndentedString(healthCheckKey)).append("\n");
    sb.append("    i18n: ").append(toIndentedString(i18n)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("http");
    openapiFields.add("logins");
    openapiFields.add("auths");
    openapiFields.add("entries");
    openapiFields.add("db");
    openapiFields.add("token");
    openapiFields.add("rateLimiters");
    openapiFields.add("secret");
    openapiFields.add("healthCheckKey");
    openapiFields.add("i18n");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("logins");
    openapiRequiredFields.add("auths");
    openapiRequiredFields.add("entries");
    openapiRequiredFields.add("db");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to SelfHostedAppCfg
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (SelfHostedAppCfg.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in SelfHostedAppCfg is not found in the empty JSON string", SelfHostedAppCfg.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!SelfHostedAppCfg.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `SelfHostedAppCfg` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : SelfHostedAppCfg.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      // validate the optional field `http`
      if (jsonObj.getAsJsonObject("http") != null) {
        HttpCfg.validateJsonObject(jsonObj.getAsJsonObject("http"));
      }
      // ensure the json data is an array
      if (jsonObj.get("logins") != null && !jsonObj.get("logins").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `logins` to be an array in the JSON string but got `%s`", jsonObj.get("logins").toString()));
      }
      // validate the optional field `db`
      if (jsonObj.getAsJsonObject("db") != null) {
        DbsCfg.validateJsonObject(jsonObj.getAsJsonObject("db"));
      }
      // validate the optional field `token`
      if (jsonObj.getAsJsonObject("token") != null) {
        TokenCfg.validateJsonObject(jsonObj.getAsJsonObject("token"));
      }
      if (jsonObj.get("secret") != null && !jsonObj.get("secret").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `secret` to be a primitive type in the JSON string but got `%s`", jsonObj.get("secret").toString()));
      }
      if (jsonObj.get("healthCheckKey") != null && !jsonObj.get("healthCheckKey").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `healthCheckKey` to be a primitive type in the JSON string but got `%s`", jsonObj.get("healthCheckKey").toString()));
      }
      // validate the optional field `i18n`
      if (jsonObj.getAsJsonObject("i18n") != null) {
        I18nCfg.validateJsonObject(jsonObj.getAsJsonObject("i18n"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SelfHostedAppCfg.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SelfHostedAppCfg' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SelfHostedAppCfg> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SelfHostedAppCfg.class));

       return (TypeAdapter<T>) new TypeAdapter<SelfHostedAppCfg>() {
           @Override
           public void write(JsonWriter out, SelfHostedAppCfg value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public SelfHostedAppCfg read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of SelfHostedAppCfg given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of SelfHostedAppCfg
  * @throws IOException if the JSON string is invalid with respect to SelfHostedAppCfg
  */
  public static SelfHostedAppCfg fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SelfHostedAppCfg.class);
  }

 /**
  * Convert an instance of SelfHostedAppCfg to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

